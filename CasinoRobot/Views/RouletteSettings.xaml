<UserControl x:Class="CasinoRobot.Views.RouletteSettings"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Converters="clr-namespace:CasinoRobot.Converters"
             xmlns:Enums="clr-namespace:CasinoRobot.Enums"
             xmlns:ViewModels="clr-namespace:CasinoRobot.ViewModels"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:toolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
             d:DesignHeight="300"
             d:DesignWidth="300"
             mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Brushes.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                  VerticalScrollBarVisibility="Auto">
        <StackPanel Background="White"
                    Grid.IsSharedSizeScope="True">
            <StackPanel.Resources>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="Margin" Value="2" />
                </Style>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="Margin" Value="2" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                </Style>
                <Style TargetType="{x:Type ComboBox}">
                    <Setter Property="Margin" Value="2" />
                </Style>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Margin" Value="2" />
                </Style>
                <Style TargetType="{x:Type CheckBox}">
                    <Setter Property="Margin" Value="2" />
                </Style>
                <Style TargetType="{x:Type Expander}">
                    <Setter Property="Margin" Value="2" />
                </Style>

                <ObjectDataProvider x:Key="SpeedKindEnum"
                                    MethodName="GetValues"
                                    ObjectType="{x:Type sys:Enum}">
                    <ObjectDataProvider.MethodParameters>
                        <x:Type TypeName="Enums:SpeedKind" />
                    </ObjectDataProvider.MethodParameters>
                </ObjectDataProvider>

                <ObjectDataProvider x:Key="BettingModeEnum"
                                    MethodName="GetValues"
                                    ObjectType="{x:Type sys:Enum}">
                    <ObjectDataProvider.MethodParameters>
                        <x:Type TypeName="Enums:BettingSystem" />
                    </ObjectDataProvider.MethodParameters>
                </ObjectDataProvider>
            </StackPanel.Resources>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="3" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0"
                           Text="Logfile" />
                <TextBox Grid.Column="2"
                         Text="{Binding Logfile,
                                        UpdateSourceTrigger=PropertyChanged}" />
                <Button Grid.Column="4"
                        Click="SelectLogFile_Click"
                        Content="…"
                        Padding="2,0" />
            </Grid>

            <Expander Header="Session"
                      IsExpanded="True">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"
                                          SharedSizeGroup="NameGroup" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0"
                               Text="Simulation Mode" />
                    <CheckBox Grid.Row="0"
                              Grid.Column="2"
                              IsChecked="{Binding IsSimulationMode}" />

                    <TextBlock Grid.Row="1"
                               Text="Start Balance" />
                    <TextBox Grid.Row="1"
                             Grid.Column="2"
                             Text="{Binding StartBalance,
                                            UpdateSourceTrigger=LostFocus}" />

                    <TextBlock Grid.Row="2"
                               Text="Speed" />
                    <ComboBox Grid.Row="2"
                              Grid.Column="2"
                              VerticalAlignment="Center"
                              ItemsSource="{Binding Source={StaticResource SpeedKindEnum}}"
                              SelectedItem="{Binding SessionSpeed,
                                                     UpdateSourceTrigger=PropertyChanged}" />

                    <TextBlock Grid.Row="3"
                               Text="Max Wins" />
                    <TextBox Grid.Row="3"
                             Grid.Column="2"
                             Text="{Binding MaxWinCount,
                                            UpdateSourceTrigger=PropertyChanged}" />

                    <TextBlock Grid.Row="4"
                               Text="Max Losses" />
                    <TextBox Grid.Row="4"
                             Grid.Column="2"
                             Text="{Binding MaxLossCount,
                                            UpdateSourceTrigger=PropertyChanged}" />

                    <TextBlock Grid.Row="5"
                               Text="Stop on won Amount" />
                    <TextBox Grid.Row="5"
                             Grid.Column="2"
                             Text="{Binding MaxWonAmount,
                                            UpdateSourceTrigger=PropertyChanged}" />

                    <TextBlock Grid.Row="6"
                               Text="Stop on lost Amount" />
                    <TextBox Grid.Row="6"
                             Grid.Column="2"
                             Text="{Binding MaxLostAmount,
                                            UpdateSourceTrigger=PropertyChanged}" />

                    <TextBlock Grid.Row="7"
                               Text="Time Limit"
                               ToolTip="Maximum time in minutes." />
                    <TextBox Grid.Row="7"
                             Grid.Column="2"
                             Text="{Binding TimeLimit,
                                            UpdateSourceTrigger=PropertyChanged}"
                             ToolTip="Maximum time in minutes." />

                    <TextBlock Grid.Row="8"
                               Text="Time To Refresh"
                               ToolTip="Time in minutes, after which the browser will refresh." />
                    <TextBox Grid.Row="8"
                             Grid.Column="2"
                             Text="{Binding TimeToRefresh,
                                            UpdateSourceTrigger=PropertyChanged}"
                             ToolTip="Time in minutes, after which the browser will refresh." />
                </Grid>
            </Expander>

            <Expander Header="Window">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"
                                          SharedSizeGroup="NameGroup" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <TextBlock Text="Width" />
                    <toolkit:IntegerUpDown Grid.Column="2"
                                           Margin="3"
                                           AllowSpin="True"
                                           Maximum="1600"
                                           Minimum="500"
                                           Value="{Binding WindowWidth,
                                                           UpdateSourceTrigger=PropertyChanged}" />

                    <TextBlock Grid.Row="1"
                               Text="Height" />
                    <toolkit:IntegerUpDown Grid.Row="1"
                                           Grid.Column="2"
                                           Margin="3"
                                           AllowSpin="True"
                                           Maximum="1600"
                                           Minimum="500"
                                           Value="{Binding WindowHeight,
                                                           UpdateSourceTrigger=PropertyChanged}" />

                </Grid>
            </Expander>

            <Expander Header="Bets">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"
                                          SharedSizeGroup="NameGroup" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0"
                               Text="Mode" />
                    <ComboBox x:Name="cbBetMode"
                              Grid.Row="0"
                              Grid.Column="2"
                              ItemsSource="{Binding Source={StaticResource BettingModeEnum}}"
                              SelectedItem="{Binding BettingMode}" />

                    <TextBlock Grid.Row="1"
                               Text="Default Bet" />
                    <ComboBox Grid.Row="1"
                              Grid.Column="2"
                              DisplayMemberPath="Amount"
                              ItemsSource="{Binding CasinoBets}"
                              SelectedItem="{Binding DefaultBet}" />

                    <!--  Martingale Betting Mode  -->
                    <Grid Grid.Row="2"
                          Grid.ColumnSpan="3">
                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding BettingMode}"
                                                 Value="{x:Static Enums:BettingSystem.Martingale}">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"
                                              SharedSizeGroup="NameGroup" />
                            <ColumnDefinition Width="5" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <!--  TODO  -->
                        <TextBlock Grid.Row="1"
                                   Text="Available Bets" />
                        <ComboBox Grid.Row="1"
                                  Grid.Column="2"
                                  IsEnabled="False"
                                  ItemsSource="{Binding CasinoBets}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <CheckBox Content="{Binding Amount}"
                                              IsChecked="{Binding IsAvailable}" />
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                        <!--  TODO  -->
                        <TextBlock Grid.Row="2"
                                   Text="Auto Adjust Bets" />
                        <ComboBox Grid.Row="2"
                                  Grid.Column="2"
                                  IsEnabled="False"
                                  ItemsSource="{Binding CasinoBets}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"
                                                              SharedSizeGroup="AmountGroup" />
                                            <ColumnDefinition Width="5" />
                                            <ColumnDefinition Width="70" />
                                        </Grid.ColumnDefinitions>

                                        <TextBlock VerticalAlignment="Center"
                                                   Text="{Binding Amount}" />
                                        <TextBox Grid.Column="2"
                                                 VerticalAlignment="Center"
                                                 Text="{Binding MultiBetStartBalance,
                                                                UpdateSourceTrigger=PropertyChanged}" />
                                    </Grid>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                        <TextBlock Grid.Row="3"
                                   Text="Min Bet" />
                        <TextBox Grid.Row="3"
                                 Grid.Column="2"
                                 Text="{Binding MinBetAmount,
                                                UpdateSourceTrigger=LostFocus}" />

                        <TextBlock Grid.Row="4"
                                   Text="Max Bet" />
                        <TextBox Grid.Row="4"
                                 Grid.Column="2"
                                 Text="{Binding MaxBetAmount,
                                                UpdateSourceTrigger=LostFocus}" />

                        <TextBlock Grid.Row="5"
                                   Text="Min Betting Streak" />
                        <TextBox Grid.Row="5"
                                 Grid.Column="2"
                                 Text="{Binding MinBettingStreakCount,
                                                UpdateSourceTrigger=PropertyChanged}" />

                        <TextBlock Grid.Row="6"
                                   Text="Max Betting Streak" />
                        <TextBox Grid.Row="6"
                                 Grid.Column="2"
                                 Text="{Binding MaxBettingStreakCount,
                                                UpdateSourceTrigger=PropertyChanged}" />

                        <TextBlock Grid.Row="7"
                                   Text="Adjust Betting Streaks" />
                        <CheckBox Grid.Row="7"
                                  Grid.Column="2"
                                  IsChecked="{Binding AutoAdjustBettingStreakCount,
                                                      UpdateSourceTrigger=PropertyChanged}" />

                        <TextBlock Grid.Row="8"
                                   Text="Double Up On Loss" />
                        <CheckBox Grid.Row="8"
                                  Grid.Column="2"
                                  IsChecked="{Binding DoubleUpOnLoss,
                                                      UpdateSourceTrigger=PropertyChanged}" />

                        <!--  TODO  -->
                        <!--
                            <TextBlock Grid.Row="8"
                            Text="Auto Streak Decrease"
                            ToolTip="Time in minutes after which to decrease all max streak counts by 1 if no bets were placed." />
                            <TextBox Grid.Row="8"
                            Grid.Column="2"
                            IsEnabled="False"
                            Text="{Binding AutoMaxStreakDecrease,
                            UpdateSourceTrigger=PropertyChanged}"
                            ToolTip="Time in minutes after which to decrease all max streak counts by 1 if no bets were placed." />
                        -->

                        <!--  TODO  -->
                        <TextBlock Grid.Row="9"
                                   Text="Enable Multi Streak Bets"
                                   ToolTip="True, if betting on multiple streaks simultaneously is allowed." />
                        <CheckBox Grid.Row="9"
                                  Grid.Column="2"
                                  IsChecked="{Binding EnableMultiStreakBets}"
                                  IsEnabled="False"
                                  ToolTip="True, if betting on multiple streaks simultaneously is allowed." />

                        <TextBlock Grid.Row="10"
                                   Text="Multi Streak Bet Start"
                                   ToolTip="Threshold balance to start betting multiple streaks simultaneously." />
                        <TextBox Grid.Row="10"
                                 Grid.Column="2"
                                 IsEnabled="{Binding EnableMultiStreakBets}"
                                 Text="{Binding MultiStreakBetStartBalance,
                                                UpdateSourceTrigger=PropertyChanged}"
                                 ToolTip="Threshold balance to start betting multiple streaks simultaneously." />

                        <TextBlock Grid.Row="11"
                                   Text="Reset Streaks On Zero"
                                   ToolTip="True, current streak counters should be reset when zero comes up." />
                        <CheckBox Grid.Row="11"
                                  Grid.Column="2"
                                  IsChecked="{Binding ResetStreaksOnZero}"
                                  ToolTip="True, current streak counters should be reset when zero comes up." />

                    </Grid>

                    <!--  Single Streak Betting Mode  -->
                    <Grid Grid.Row="2"
                          Grid.ColumnSpan="3">
                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding BettingMode}"
                                                 Value="{x:Static Enums:BettingSystem.SingleStreakBetting}">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"
                                              SharedSizeGroup="NameGroup" />
                            <ColumnDefinition Width="5" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <TextBlock Grid.Row="0"
                                   Text="Single Streak Count" />
                        <TextBox Grid.Row="0"
                                 Grid.Column="2"
                                 Text="{Binding SingleStreakBettingSettings.StreakCounts,
                                                Converter={x:Static Converters:IntListToStringConverter.Instance},
                                                UpdateSourceTrigger=LostFocus}" />

                        <TextBlock Grid.Row="1"
                                   Text="Bet On Red/Black" />
                        <CheckBox Grid.Row="1"
                                  Grid.Column="2"
                                  IsChecked="{Binding SingleStreakBettingSettings.BetOnRedAndBlack,
                                                      UpdateSourceTrigger=PropertyChanged}" />

                        <TextBlock Grid.Row="2"
                                   Text="Bet On Even/Odd" />
                        <CheckBox Grid.Row="2"
                                  Grid.Column="2"
                                  IsChecked="{Binding SingleStreakBettingSettings.BetOnEvenAndOdd,
                                                      UpdateSourceTrigger=PropertyChanged}" />

                        <TextBlock Grid.Row="3"
                                   Text="Bet On To18/From19" />
                        <CheckBox Grid.Row="3"
                                  Grid.Column="2"
                                  IsChecked="{Binding SingleStreakBettingSettings.BetOnTo18AndFrom19,
                                                      UpdateSourceTrigger=PropertyChanged}" />

                        <TextBlock Grid.Row="4"
                                   Text="Reset Streaks On Zero"
                                   ToolTip="True, current streak counters should be reset when zero comes up." />
                        <CheckBox Grid.Row="4"
                                  Grid.Column="2"
                                  IsChecked="{Binding ResetStreaksOnZero}"
                                  ToolTip="True, current streak counters should be reset when zero comes up." />

                    </Grid>

                    <!--  Last Number Betting Mode  -->
                    <Grid Grid.Row="2"
                          Grid.ColumnSpan="3">
                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding BettingMode}"
                                                 Value="{x:Static Enums:BettingSystem.LastNumberBetting}">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"
                                              SharedSizeGroup="NameGroup" />
                            <ColumnDefinition Width="5" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <TextBlock Grid.Row="0"
                                   Text="Bet On Red/Black" />
                        <CheckBox Grid.Row="0"
                                  Grid.Column="2"
                                  IsChecked="{Binding LastNumberBettingSettings.BetOnRedAndBlack,
                                                      UpdateSourceTrigger=PropertyChanged}" />

                        <TextBlock Grid.Row="1"
                                   Text="Bet On Even/Odd" />
                        <CheckBox Grid.Row="1"
                                  Grid.Column="2"
                                  IsChecked="{Binding LastNumberBettingSettings.BetOnEvenAndOdd,
                                                      UpdateSourceTrigger=PropertyChanged}" />

                        <TextBlock Grid.Row="2"
                                   Text="Bet On To18/From19" />
                        <CheckBox Grid.Row="2"
                                  Grid.Column="2"
                                  IsChecked="{Binding LastNumberBettingSettings.BetOnTo18AndFrom19,
                                                      UpdateSourceTrigger=PropertyChanged}" />

                        <TextBlock Grid.Row="3"
                                   Text="Alternate after Losses" />
                        <TextBox Grid.Row="3"
                                 Grid.Column="2"
                                 IsEnabled="{Binding LastNumberBettingSettings.IsTendencyAdjustmentEnabled,
                                                     Converter={x:Static Converters:BoolToReversedBoolConverter.Instance}}"
                                 Text="{Binding LastNumberBettingSettings.AlternateAfterLossCount,
                                                UpdateSourceTrigger=PropertyChanged}" />

                        <TextBlock Grid.Row="4"
                                   Text="Adjust To Tendency" />
                        <CheckBox Grid.Row="4"
                                  Grid.Column="2"
                                  IsChecked="{Binding LastNumberBettingSettings.IsTendencyAdjustmentEnabled,
                                                      UpdateSourceTrigger=PropertyChanged}" />

                        <TextBlock Grid.Row="5"
                                   Text="Tendency Measurement" />
                        <TextBox Grid.Row="5"
                                 Grid.Column="2"
                                 IsEnabled="{Binding LastNumberBettingSettings.IsTendencyAdjustmentEnabled}"
                                 Text="{Binding LastNumberBettingSettings.TendencyAdjustmentMeasurementCount}" />

                        <TextBlock Grid.Row="6"
                                   Text="Adjustment Threshold" />
                        <TextBox Grid.Row="6"
                                 Grid.Column="2"
                                 IsEnabled="{Binding LastNumberBettingSettings.IsTendencyAdjustmentEnabled}"
                                 Text="{Binding LastNumberBettingSettings.TendencyAdjustmentLossThreshold}" />

                    </Grid>

                    <!--  Number Negligence Betting Mode  -->
                    <Grid Grid.Row="2"
                          Grid.ColumnSpan="3">
                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding BettingMode}"
                                                 Value="{x:Static Enums:BettingSystem.NumberNegligence}">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"
                                              SharedSizeGroup="NameGroup" />
                            <ColumnDefinition Width="5" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <TextBlock Grid.Row="0"
                                   Text="MinNumber Count" />
                        <TextBox Grid.Row="0"
                                 Grid.Column="2"
                                 IsEnabled="{Binding NumberNegligenceBettingSettings.BetOnSameEndings,
                                                     Converter={x:Static Converters:BoolToReversedBoolConverter.Instance}}"
                                 Text="{Binding NumberNegligenceBettingSettings.MinNumberBettingCount,
                                                UpdateSourceTrigger=PropertyChanged}" />

                        <TextBlock Grid.Row="1"
                                   Text="Max Number Count" />
                        <TextBox Grid.Row="1"
                                 Grid.Column="2"
                                 IsEnabled="{Binding NumberNegligenceBettingSettings.BetOnSameEndings,
                                                     Converter={x:Static Converters:BoolToReversedBoolConverter.Instance}}"
                                 Text="{Binding NumberNegligenceBettingSettings.MaxNumberBettingCount,
                                                UpdateSourceTrigger=PropertyChanged}" />

                        <TextBlock Grid.Row="2"
                                   Text="Negligence Streak Threshold" />
                        <TextBox Grid.Row="2"
                                 Grid.Column="2"
                                 Text="{Binding NumberNegligenceBettingSettings.NegligenceStreakThreshold,
                                                UpdateSourceTrigger=PropertyChanged}" />

                        <TextBlock Grid.Row="3"
                                   Text="Max Streaks Last" />
                        <CheckBox Grid.Row="3"
                                  Grid.Column="2"
                                  IsChecked="{Binding NumberNegligenceBettingSettings.MaxStreakCountNumberLast,
                                                      UpdateSourceTrigger=PropertyChanged}"
                                  IsEnabled="{Binding NumberNegligenceBettingSettings.BetOnSameEndings,
                                                      Converter={x:Static Converters:BoolToReversedBoolConverter.Instance}}" />

                        <TextBlock Grid.Row="4"
                                   Text="Frequent Numbers First" />
                        <CheckBox Grid.Row="4"
                                  Grid.Column="2"
                                  IsChecked="{Binding NumberNegligenceBettingSettings.FrequentNumbersFirst,
                                                      UpdateSourceTrigger=PropertyChanged}"
                                  IsEnabled="{Binding NumberNegligenceBettingSettings.BetOnSameEndings,
                                                      Converter={x:Static Converters:BoolToReversedBoolConverter.Instance}}" />

                        <TextBlock Grid.Row="5"
                                   Text="Only Same Endings" />
                        <CheckBox Grid.Row="5"
                                  Grid.Column="2"
                                  IsChecked="{Binding NumberNegligenceBettingSettings.BetOnSameEndings,
                                                      UpdateSourceTrigger=PropertyChanged}" />

                        <TextBlock Grid.Row="6"
                                   Text="Wait for Repetition" />
                        <TextBox Grid.Row="6"
                                 Grid.Column="2"
                                 IsEnabled="{Binding NumberNegligenceBettingSettings.BetOnSameEndings}"
                                 Text="{Binding NumberNegligenceBettingSettings.WaitForRepetitionCount,
                                                UpdateSourceTrigger=PropertyChanged}" />

                        <TextBlock Grid.Row="7"
                                   Text="Abort Wait on Loss Count" />
                        <TextBox Grid.Row="7"
                                 Grid.Column="2"
                                 IsEnabled="{Binding NumberNegligenceBettingSettings.BetOnSameEndings}"
                                 Text="{Binding NumberNegligenceBettingSettings.AbortWaitOnLossCount,
                                                UpdateSourceTrigger=PropertyChanged}" />

                    </Grid>

                </Grid>
            </Expander>

            <Expander Header="Markers"
                      IsExpanded="{Binding IsEditingMarkers,
                                           Mode=OneWayToSource,
                                           Source={x:Static ViewModels:ApplicationViewModel.Instance}}">
                <!--  ChangeButtons Grid  -->

                <Grid Background="White">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="5" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="5" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <ListView x:Name="lvButtons"
                              MaxHeight="200"
                              ItemsSource="{Binding CasinoButtons}"
                              ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                              SelectedItem="{Binding SelectedButtonMarker,
                                                     Mode=OneWayToSource,
                                                     Source={x:Static ViewModels:ApplicationViewModel.Instance}}">
                        <ListView.Resources>
                            <Style TargetType="{x:Type ListViewItem}">
                                <EventSetter Event="MouseDoubleClick"
                                             Handler="CasinoMarker_DoubleClick" />
                            </Style>
                        </ListView.Resources>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Width="{Binding ActualWidth,
                                                                ElementName=lvButtons}"
                                                DisplayMemberBinding="{Binding Name}"
                                                Header="Button" />
                            </GridView>
                        </ListView.View>
                        <ListView.ItemContainerStyle>
                            <Style BasedOn="{StaticResource {x:Type ListViewItem}}"
                                   TargetType="{x:Type ListViewItem}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding HasValue}"
                                                 Value="False">
                                        <Setter Property="Background" Value="{StaticResource UnAssignedMarkerBrush}" />
                                    </DataTrigger>
                                    <DataTrigger Value="True">
                                        <DataTrigger.Binding>
                                            <MultiBinding Converter="{x:Static Converters:AreEqualConverter.Instance}">
                                                <Binding Path="CurrentlyAssigningMarker"
                                                         Source="{x:Static ViewModels:ApplicationViewModel.Instance}" />
                                                <Binding Path="." />
                                            </MultiBinding>
                                        </DataTrigger.Binding>

                                        <Setter Property="Background" Value="{StaticResource AssigningMarkerBrush}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>


                    <!--  ChangeNumbers Grid  -->
                    <ListView x:Name="lvNumbers"
                              Grid.Row="2"
                              MaxHeight="200"
                              ItemsSource="{Binding CasinoNumbers}"
                              ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                              SelectedItem="{Binding SelectedNumberMarker,
                                                     Mode=OneWayToSource,
                                                     Source={x:Static ViewModels:ApplicationViewModel.Instance}}">
                        <ListView.Resources>
                            <Style TargetType="{x:Type ListViewItem}">
                                <EventSetter Event="MouseDoubleClick"
                                             Handler="CasinoMarker_DoubleClick" />
                            </Style>
                        </ListView.Resources>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Width="{Binding ActualWidth,
                                                                ElementName=lvNumbers}"
                                                DisplayMemberBinding="{Binding Number}"
                                                Header="Number" />
                            </GridView>
                        </ListView.View>
                        <ListView.ItemContainerStyle>
                            <Style BasedOn="{StaticResource {x:Type ListViewItem}}"
                                   TargetType="{x:Type ListViewItem}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Number,
                                                                   Converter={x:Static Converters:IsNumberOfTypeConverter.Instance},
                                                                   ConverterParameter=Red}"
                                                 Value="True">
                                        <Setter Property="Foreground" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=Number,
                                                                   Converter={x:Static Converters:IsNumberOfTypeConverter.Instance},
                                                                   ConverterParameter=Black}"
                                                 Value="True">
                                        <Setter Property="Foreground" Value="Black" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=Number,
                                                                   Converter={x:Static Converters:IsNumberOfTypeConverter.Instance},
                                                                   ConverterParameter=Zero}"
                                                 Value="True">
                                        <Setter Property="Foreground" Value="Green" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding HasValue}"
                                                 Value="False">
                                        <Setter Property="Background" Value="{StaticResource UnAssignedMarkerBrush}" />
                                    </DataTrigger>
                                    <DataTrigger Value="True">
                                        <DataTrigger.Binding>
                                            <MultiBinding Converter="{x:Static Converters:AreEqualConverter.Instance}">
                                                <Binding Path="CurrentlyAssigningMarker"
                                                         Source="{x:Static ViewModels:ApplicationViewModel.Instance}" />
                                                <Binding Path="." />
                                            </MultiBinding>
                                        </DataTrigger.Binding>

                                        <Setter Property="Background" Value="{StaticResource AssigningMarkerBrush}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>

                    <!--  ChangeBets Grid  -->
                    <ListView x:Name="lvBets"
                              Grid.Row="4"
                              MaxHeight="200"
                              ItemsSource="{Binding CasinoBets}"
                              ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                              SelectedItem="{Binding SelectedBetMarker,
                                                     Mode=OneWayToSource,
                                                     Source={x:Static ViewModels:ApplicationViewModel.Instance}}">
                        <ListView.Resources>
                            <Style TargetType="{x:Type ListViewItem}">
                                <EventSetter Event="MouseDoubleClick"
                                             Handler="CasinoMarker_DoubleClick" />
                            </Style>
                        </ListView.Resources>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Width="{Binding ActualWidth,
                                                                ElementName=lvBets}"
                                                DisplayMemberBinding="{Binding Amount}"
                                                Header="Bet" />
                            </GridView>
                        </ListView.View>
                        <ListView.ItemContainerStyle>
                            <Style BasedOn="{StaticResource {x:Type ListViewItem}}"
                                   TargetType="{x:Type ListViewItem}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding HasValue}"
                                                 Value="False">
                                        <Setter Property="Background" Value="{StaticResource UnAssignedMarkerBrush}" />
                                    </DataTrigger>
                                    <DataTrigger Value="True">
                                        <DataTrigger.Binding>
                                            <MultiBinding Converter="{x:Static Converters:AreEqualConverter.Instance}">
                                                <Binding Path="CurrentlyAssigningMarker"
                                                         Source="{x:Static ViewModels:ApplicationViewModel.Instance}" />
                                                <Binding Path="." />
                                            </MultiBinding>
                                        </DataTrigger.Binding>

                                        <Setter Property="Background" Value="{StaticResource AssigningMarkerBrush}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>

                </Grid>

            </Expander>
        </StackPanel>
    </ScrollViewer>
</UserControl>
